<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DeviceProfile', 'mdmserver');

/**
 * BaseDeviceProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $device_id
 * @property integer $profile_id
 * @property DeviceInventory $DeviceInventory
 * @property Profile $Profile
 * 
 * @method integer         getDeviceId()        Returns the current record's "device_id" value
 * @method integer         getProfileId()       Returns the current record's "profile_id" value
 * @method DeviceInventory getDeviceInventory() Returns the current record's "DeviceInventory" value
 * @method Profile         getProfile()         Returns the current record's "Profile" value
 * @method DeviceProfile   setDeviceId()        Sets the current record's "device_id" value
 * @method DeviceProfile   setProfileId()       Sets the current record's "profile_id" value
 * @method DeviceProfile   setDeviceInventory() Sets the current record's "DeviceInventory" value
 * @method DeviceProfile   setProfile()         Sets the current record's "Profile" value
 * 
 * @package    mdm-server
 * @subpackage model
 * @author     Dung Huynh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDeviceProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('device_profile');
        $this->hasColumn('device_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('profile_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DeviceInventory', array(
             'local' => 'device_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Profile', array(
             'local' => 'profile_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}